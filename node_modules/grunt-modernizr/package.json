{
  "_args": [
    [
      {
        "raw": "grunt-modernizr@^0.6.0",
        "scope": null,
        "escapedName": "grunt-modernizr",
        "name": "grunt-modernizr",
        "rawSpec": "^0.6.0",
        "spec": ">=0.6.0 <0.7.0",
        "type": "range"
      },
      "/var/www/html"
    ]
  ],
  "_from": "grunt-modernizr@>=0.6.0 <0.7.0",
  "_id": "grunt-modernizr@0.6.1",
  "_inCache": true,
  "_location": "/grunt-modernizr",
  "_nodeVersion": "0.12.7",
  "_npmUser": {
    "name": "patrickkettner",
    "email": "patrickkettner@gmail.com"
  },
  "_npmVersion": "2.14.2",
  "_phantomChildren": {
    "aws-sign": "0.3.0",
    "boom": "0.4.2",
    "combined-stream": "0.0.7",
    "cookie-jar": "0.3.0",
    "cryptiles": "0.2.2",
    "forever-agent": "0.5.2",
    "hoek": "0.9.1",
    "http-signature": "0.10.1",
    "json-stringify-safe": "5.0.1",
    "mime": "1.2.11",
    "node-uuid": "1.4.8",
    "sntp": "0.2.4"
  },
  "_requested": {
    "raw": "grunt-modernizr@^0.6.0",
    "scope": null,
    "escapedName": "grunt-modernizr",
    "name": "grunt-modernizr",
    "rawSpec": "^0.6.0",
    "spec": ">=0.6.0 <0.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-modernizr/-/grunt-modernizr-0.6.1.tgz",
  "_shasum": "e6bcd534929fc78f77d816d79567bf50dccaa199",
  "_shrinkwrap": null,
  "_spec": "grunt-modernizr@^0.6.0",
  "_where": "/var/www/html",
  "author": {
    "name": "Richard Herrera",
    "email": "rich@doctyper.com",
    "url": "http://doctyper.com"
  },
  "bin": {
    "grunt-modernizr": "bin/grunt-modernizr"
  },
  "bugs": {
    "url": "https://github.com/Modernizr/grunt-modernizr/issues"
  },
  "dependencies": {
    "colors": "0.6.x",
    "promised-io": "0.3.x",
    "request": "~2.27.0",
    "uglify-js": "1.3.3"
  },
  "description": "Build out a lean, mean Modernizr machine.",
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.7.0",
    "grunt-contrib-nodeunit": "0.4.1",
    "grunt-contrib-watch": "~0.3.1",
    "mocha": ">=1.6.0",
    "nexpect": ">=0.2.4"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "e6bcd534929fc78f77d816d79567bf50dccaa199",
    "tarball": "https://registry.npmjs.org/grunt-modernizr/-/grunt-modernizr-0.6.1.tgz"
  },
  "engines": {
    "node": "*"
  },
  "gitHead": "64e075bfef489c840dce6b33498be250d6374171",
  "homepage": "https://github.com/Modernizr/grunt-modernizr",
  "keywords": [
    "gruntplugin",
    "modernizr"
  ],
  "license": "MIT",
  "main": "grunt.js",
  "maintainers": [
    {
      "name": "doctyper",
      "email": "rich@doctyper.com"
    },
    {
      "name": "patrickkettner",
      "email": "patrickkettner@gmail.com"
    }
  ],
  "name": "grunt-modernizr",
  "optionalDependencies": {},
  "readme": "# grunt-modernizr\n\n[![Build Status](https://travis-ci.org/Modernizr/grunt-modernizr.png?branch=master,develop)](https://travis-ci.org/Modernizr/grunt-modernizr)\n\n##### *tl;dr:* `grunt-modernizr` sifts through your project files, gathers up your references to Modernizr tests and outputs a lean, mean Modernizr machine.\n\n`grunt-modernizr` is a Modernizr builder for your project. It is based on the Modernizr team's [Modulizr](https://github.com/Modernizr/modernizr.com/blob/gh-pages/i/js/modulizr.js) tool.\n\nThis highly configurable task allows you to configure and export a custom Modernizr build. Use Modernizr's [annotated source](http://modernizr.com/downloads/modernizr-latest.js) for development, and let this tool worry about optimization.\n\nWhen you're ready to build, `grunt-modernizr` will crawl your project for Modernizr test references and save out a minified, uglified, customized version using only the tests you've used in your JavaScript or (S)CSS.\n\n## Getting Started\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with:\n\n```bash\nnpm install grunt-modernizr --save-dev\n```\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks(\"grunt-modernizr\");\n```\n\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\n### Command Line\n\nRun the task with `grunt modernizr:dist`.\n\n#### Cache Busting\n\nBust the cache of locally downloaded files by running `grunt modernizr:dist:bust`\n\n### Config Options\n\nAdd a `modernizr` config object to your Gruntfile.js file. The task supports multiple targets:\n\n```javascript\nmodernizr: {\n\n\tdist: {\n\t\t// [REQUIRED] Path to the build you're using for development.\n\t\t\"devFile\" : \"lib/modernizr-dev.js\",\n\n\t\t// Path to save out the built file.\n\t\t\"outputFile\" : \"build/modernizr-custom.js\",\n\n\t\t// Based on default settings on http://modernizr.com/download/\n\t\t\"extra\" : {\n\t\t\t\"shiv\" : true,\n\t\t\t\"printshiv\" : false,\n\t\t\t\"load\" : true,\n\t\t\t\"mq\" : false,\n\t\t\t\"cssclasses\" : true\n\t\t},\n\n\t\t// Based on default settings on http://modernizr.com/download/\n\t\t\"extensibility\" : {\n\t\t\t\"addtest\" : false,\n\t\t\t\"prefixed\" : false,\n\t\t\t\"teststyles\" : false,\n\t\t\t\"testprops\" : false,\n\t\t\t\"testallprops\" : false,\n\t\t\t\"hasevents\" : false,\n\t\t\t\"prefixes\" : false,\n\t\t\t\"domprefixes\" : false,\n\t\t\t\"cssclassprefix\": \"\"\n\t\t},\n\n\t\t// By default, source is uglified before saving\n\t\t\"uglify\" : true,\n\n\t\t// Define any tests you want to implicitly include.\n\t\t\"tests\" : [],\n\n\t\t// By default, this task will crawl your project for references to Modernizr tests.\n\t\t// Set to false to disable.\n\t\t\"parseFiles\" : true,\n\n\t\t// When parseFiles = true, this task will crawl all *.js, *.css, *.scss and *.sass files,\n\t\t// except files that are in node_modules/.\n\t\t// You can override this by defining a \"files\" array below.\n\t\t// \"files\" : {\n\t\t\t// \"src\": []\n\t\t// },\n\n\t\t// This handler will be passed an array of all the test names passed to the Modernizr API, and will run after the API call has returned\n\t\t// \"handler\": function (tests) {},\n\n\t\t// When parseFiles = true, matchCommunityTests = true will attempt to\n\t\t// match user-contributed tests.\n\t\t\"matchCommunityTests\" : false,\n\n\t\t// Have custom Modernizr tests? Add paths to their location here.\n\t\t\"customTests\" : []\n\t}\n\n}\n```\n\n#### Required\n\n###### **`devFile`** (String)\nPath to the local build file you're using for development. This parameter is needed so `grunt-modernizr` can skip your dev file when traversing your project to avoid triggering false positives. If you're using a remote file for development, set this option to `remote`.\n\n#### Optional\n\n###### **`outputFile`** (String)\nPath to save the customized Modernizr build. It defaults to `lib/modernizr-custom.js`.\n\n###### **`extra`** (Object)\nAn object of extra configuration options. Check the extra section on [modernizr.com/download](http://modernizr.com/download/) for complete options. Defaults are as they appear on the official site.\n\n###### **`extensibility`** (Object)\nAn object of extensibility options. Check the section on [modernizr.com/download](http://modernizr.com/download/) for complete options. Defaults are as they appear on the official site.\n\n###### **`uglify`** (Boolean)\nBy default, the source is uglified before save. Set to false to disable.\n\n###### **`tests`** (Array)\nDefine any tests you want to implicitly include. Test names are lowercased, separated by underscores (if needed). Check out the full set of test options [here](https://github.com/Modernizr/modernizr.com/blob/gh-pages/i/js/modulizr.js#L15-157).\n\n###### **`parseFiles`** (Boolean)\nBy default, this task will crawl your project for references to Modernizr tests. Set to false to disable.\n\n###### **`files.src`** (Array)\nWhen `parseFiles` = `true`, this task will crawl all `*.js`, `*.css`, `*.scss` and `*.sass` files. You can override this by defining a custom `files.src` array. The object supports all [minimatch](https://github.com/isaacs/minimatch) options.\n\n###### **`handler`** (Function)\nThis handler will be passed an array of all the test names passed to the Modernizr API, and will run after the API call has returned. Optionally, if the function is asynchronous then grunt's asynchronous `done` callback will be passed into this handler as the second parameter and must be called manually in order to complete the grunt-modernizr task\n\n    // synchronous use - grunt-modernizr will exit anyway\n\thandler: function (tests) {\n\t\t// synchronous code\n\t}\n\n\t// asynchronous use - grunt-modernizr will not exit until done() is called\n\thandler: function (tests, done) {\n\t\t// asynchronous code\n\t\tdone();\n\t}\n\n###### **`matchCommunityTests`** (Boolean)\nWhen `parseFiles` = `true`, setting this boolean to true will attempt to match user-contributed tests. Check out the full set of community tests [here](https://github.com/Modernizr/grunt-modernizr/blob/master/lib/customappr.js#L2-111)\n\n###### **`customTests`** (Array)\nHave custom Modernizr tests? Add paths to their location here. The object supports all [minimatch](https://github.com/isaacs/minimatch) options.\n\n###### **`excludeFiles`** (Array)\nFiles added here will be excluded when looking for Modernizr refs. The object supports all [minimatch](https://github.com/isaacs/minimatch) options.\n\n## License\nCopyright (c) 2012 Richard Herrera\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Modernizr/grunt-modernizr.git"
  },
  "scripts": {
    "test": "node test/runner.js"
  },
  "version": "0.6.1"
}
