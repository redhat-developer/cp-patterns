{
  "_args": [
    [
      {
        "raw": "yeoman-assert@^2.0.0",
        "scope": null,
        "escapedName": "yeoman-assert",
        "name": "yeoman-assert",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/var/www/html/node_modules/yeoman-generator"
    ]
  ],
  "_from": "yeoman-assert@>=2.0.0 <3.0.0",
  "_id": "yeoman-assert@2.2.3",
  "_inCache": true,
  "_location": "/yeoman-assert",
  "_nodeVersion": "4.6.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/yeoman-assert-2.2.3.tgz_1486824048479_0.5652651228010654"
  },
  "_npmUser": {
    "name": "sboudrias",
    "email": "admin@simonboudrias.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "yeoman-assert@^2.0.0",
    "scope": null,
    "escapedName": "yeoman-assert",
    "name": "yeoman-assert",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/yeoman-generator",
    "/yeoman-test/yeoman-generator"
  ],
  "_resolved": "https://registry.npmjs.org/yeoman-assert/-/yeoman-assert-2.2.3.tgz",
  "_shasum": "a5682a83632c50ac0ee84173a5a10fd6f3206474",
  "_shrinkwrap": null,
  "_spec": "yeoman-assert@^2.0.0",
  "_where": "/var/www/html/node_modules/yeoman-generator",
  "author": {
    "name": "The Yeoman Team"
  },
  "bugs": {
    "url": "https://github.com/yeoman/yeoman-assert/issues"
  },
  "dependencies": {},
  "description": "Assert utility from yeoman",
  "devDependencies": {
    "eslint": "^3.15.0",
    "eslint-config-xo-space": "^0.15.0",
    "gulp": "^3.9.0",
    "gulp-eslint": "^3.0.1",
    "gulp-exclude-gitignore": "^1.0.0",
    "gulp-istanbul": "^1.1.1",
    "gulp-mocha": "^3.0.1",
    "gulp-nsp": "^2.1.0",
    "gulp-plumber": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a5682a83632c50ac0ee84173a5a10fd6f3206474",
    "tarball": "https://registry.npmjs.org/yeoman-assert/-/yeoman-assert-2.2.3.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "eslintConfig": {
    "extends": "xo-space",
    "env": {
      "mocha": true
    }
  },
  "files": [
    "index.js"
  ],
  "gitHead": "fa51fc568646efd9483e05fd2167012abfd28619",
  "homepage": "http://yeoman.io",
  "keywords": [
    "assert",
    "utility",
    "helper",
    "yeoman"
  ],
  "license": "BSD-2-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "addyosmani",
      "email": "addyosmani@gmail.com"
    },
    {
      "name": "arthurvr",
      "email": "contact@arthurverschaeve.be"
    },
    {
      "name": "eddiemonge",
      "email": "eddie+npm@eddiemonge.com"
    },
    {
      "name": "mischah",
      "email": "mail@michael-kuehnel.de"
    },
    {
      "name": "sboudrias",
      "email": "admin@simonboudrias.com"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "stefanbuck",
      "email": "web@broud.de"
    }
  ],
  "name": "yeoman-assert",
  "optionalDependencies": {},
  "readme": "# yeoman-assert [![Build Status](https://travis-ci.org/yeoman/yeoman-assert.svg?branch=master)](https://travis-ci.org/yeoman/yeoman-assert)\n\n`yeoman-assert` is extending the native Node `assert` module. Every methods in `assert` also is available with `yeoman-assert`, plus some code scaffolding related assertion helpers.\n\n## Install\n\n```sh\n$ npm install --save yeoman-assert\n```\n\n\n## Usage\n\n```js\nvar assert = require('yeoman-assert');\n\nassert(true);\nassert.equal(1, 1);\n```\n\n\n### `assert.file()`\n\n- **path** (String|Array) Path to a file.\n\nAssert that a file exists.\n\n```js\nassert.file('templates/user.hbs');\n```\n\nAssert that each files in the array exists.\n\n```js\nassert.file(['templates/user.hbs', 'templates/user/edit.hbs']);\n\n```\n\n\n### `assert.noFile()`\n\n- **path** (String|Array) Path to a file.\n\nAssert that a file doesn't exists.\n\n```js\nassert.noFile('templates/user.hbs');\n```\n\nAssert that each of an array of files doesn't exist.\n\n```js\nassert.noFile(['templates/user.hbs', 'templates/user/edit.hbs']);\n\n```\n\n\n### `assert.fileContent()`\n\n- **file** (String|Array) Path to a file.\n- **reg** (Regex|String) Regex or string that will be used to search the file.\n\nAssert that a file's content matches a string.\n\n```js\nassert.fileContent('models/user.js', 'App.User = DS.Model.extend');\n\n```\n\nAssert that a file's content matches a regex.\n\n```js\nassert.fileContent('models/user.js', /App\\.User = DS\\.Model\\.extend/);\n```\n\nAssert that each of an array of files content matches a regex or string.\n\n```js\nassert.fileContent([\n   ['models/user.js', 'App.User = DS.Model.extend'],\n   ['controllers/user.js', /App\\.UserController = Ember\\.ObjectController\\.extend/]\n]);\n```\n\n\n### `assert.noFileContent()`\n\n- **file** (String|Array) Path to a file.\n- **reg** (Regex|String) Regex or string that will be used to search the file.\n\nAssert that a file's content does not match a string.\n\n```js\nassert.noFileContent('models/user.js', 'App.User = DS.Model.extend');\n\n```\n\nAssert that a file's content does not match a regex.\n\n```js\nassert.noFileContent('models/user.js', /App\\.User = DS\\.Model\\.extend/);\n```\n\nAssert that each of an array of files content does not match a regex or string.\n\n```js\nassert.noFileContent([\n   ['models/user.js', 'App.User = DS.Model.extend'],\n   ['controllers/user.js', /App\\.UserController = Ember\\.ObjectController\\.extend/]\n]);\n```\n\n### `assert.textEqual()`\n\n- **value** (String) A string.\n- **expected** (String) The expected value of the string.\n\nAssert that two strings are equal after standardization of newlines.\n\n```js\nassert.textEqual('I have a yellow cat', 'I have a yellow cat');\n```\n\n\n### `assert.implement()`\n\n- **subject** (Object) Subject implementing the façade.\n- **methods** (Object|Array) A façace, hash or array of keys to be implemented.\n\nAssert an Object implements an interface.\n\n```js\nassert.implement(fs, ['readFile']);\n```\n\n\n### `assert.notImplement()`\n\n- **subject** (Object) Subject not implementing the methods.\n- **methods** (Object|Array) Hash or array of method names to be implemented.\n\nAssert an Object doesn't implements any method of an interface.\n\n```js\nassert.notImplement(fs, ['foo']);\n```\n\n### `assert.objectContent()`\n\nAssert an object contains at least a set of keys\n\n```js\nvar anObject = {a: 1};\n\nassert.objectContent(anObject, {a: 2});\n```\n\n### `assert.noObjectContent()`\n\nAssert an object does not contain at least a set of keys\n\n```js\nvar anObject = {a: 1};\n\nassert.noObjectContent(anObject, {a: 1});\n```\n\n### `assert.jsonFileContent()`\n\nAssert a JSON file contains at least a set of keys (rely of `assert.objectContent()`)\n\n```js\nassert.jsonFileContent('path/to/file.json', {a: 2});\n```\n\n### `assert.noJsonFileContent()`\n\nAssert a JSON file does not contain at least a set of keys (rely of `assert.noObjectContent()`)\n\n```js\nassert.noJsonFileContent('path/to/file.json', {a: 1});\n```\n\n## Contribute\n\nSee the [contributing docs](http://yeoman.io/contributing/).\n\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)\nCopyright (c) Google\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yeoman/yeoman-assert.git"
  },
  "scripts": {
    "prepublish": "gulp prepublish",
    "test": "gulp"
  },
  "version": "2.2.3"
}
