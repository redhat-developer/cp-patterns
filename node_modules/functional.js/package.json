{
  "_args": [
    [
      {
        "raw": "functional.js@^0.6.10",
        "scope": null,
        "escapedName": "functional.js",
        "name": "functional.js",
        "rawSpec": "^0.6.10",
        "spec": ">=0.6.10 <0.7.0",
        "type": "range"
      },
      "/var/www/html/node_modules/grunt-timer"
    ]
  ],
  "_from": "functional.js@>=0.6.10 <0.7.0",
  "_id": "functional.js@0.6.16",
  "_inCache": true,
  "_location": "/functional.js",
  "_nodeVersion": "0.12.0",
  "_npmUser": {
    "name": "leecrossley",
    "email": "leee@hotmail.co.uk"
  },
  "_npmVersion": "2.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "functional.js@^0.6.10",
    "scope": null,
    "escapedName": "functional.js",
    "name": "functional.js",
    "rawSpec": "^0.6.10",
    "spec": ">=0.6.10 <0.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/grunt-timer"
  ],
  "_resolved": "https://registry.npmjs.org/functional.js/-/functional.js-0.6.16.tgz",
  "_shasum": "f450d39d39dc03dff9477f8dfee745c34206be28",
  "_shrinkwrap": null,
  "_spec": "functional.js@^0.6.10",
  "_where": "/var/www/html/node_modules/grunt-timer",
  "author": {
    "name": "Lee Crossley",
    "email": "leee@hotmail.co.uk",
    "url": "http://ilee.co.uk/"
  },
  "bugs": {
    "url": "https://github.com/leecrossley/functional-js/issues"
  },
  "contributors": [
    {
      "name": "Lee Crossley",
      "email": "leee@hotmail.co.uk"
    },
    {
      "name": "Ryan Roberts",
      "email": "ryansroberts@gmail.com"
    }
  ],
  "dependencies": {},
  "description": "A functional JavaScript library that facilitates currying and point-free programming, with optional lambda expressions.",
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-jasmine": "^0.9.0",
    "grunt-contrib-jshint": "^0.11.0",
    "grunt-contrib-uglify": "^0.9.1",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-string-replace": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "f450d39d39dc03dff9477f8dfee745c34206be28",
    "tarball": "https://registry.npmjs.org/functional.js/-/functional.js-0.6.16.tgz"
  },
  "engines": {
    "node": ">= 0.8.x"
  },
  "gitHead": "831cf84b14c0ed1d0da79a803b35a7dc8223e492",
  "homepage": "http://functionaljs.com",
  "keywords": [
    "functional",
    "curry",
    "arity",
    "compose",
    "iterator",
    "lambda",
    "underscore"
  ],
  "main": "functional.min.js",
  "maintainers": [
    {
      "name": "leecrossley",
      "email": "leee@hotmail.co.uk"
    }
  ],
  "name": "functional.js",
  "optionalDependencies": {},
  "readme": "# functional.js (fjs) [![Build Status](https://travis-ci.org/leecrossley/functional-js.png?branch=master)](https://travis-ci.org/leecrossley/functional-js) [![npm version](https://badge.fury.io/js/functional.js.png)](https://npmjs.org/package/functional.js) [![devDependency Status](https://david-dm.org/leecrossley/functional-js/dev-status.png)](https://david-dm.org/leecrossley/functional-js#info=devDependencies)\n\n<img align=\"right\" src=\"http://functionaljs.com/css/images/logo@2x.png\">\n\n**functional.js is a functional JavaScript library.**\n\nIt facilitates [currying](http://en.wikipedia.org/wiki/Currying) and [point-free / tacit](http://en.wikipedia.org/wiki/Tacit_programming) programming, with optional lambda expressions.\n\n### Documentation\n\nVisit [functionaljs.com](http://functionaljs.com/) for the full documentation including curry, each, map, reduce, fold, apply, every, any, select, pluck, toArray, first, last, best, partition, group, while and more.\n\n### Curry function example\n\n```javascript\nvar add = fjs.curry(function(arg1, arg2) {\n    return arg1 + arg2;\n});\n\nvar add3 = add(3);\n\nadd(1, 2, 3); // => 6\nadd3(1, 2, 3, 4, 5); // => 18\n```\n\n### Curry expression example\n\n```javascript\nvar add = fjs.curry(\"a, b => a + b\");\n\nvar add3 = add(3);\n\nadd(1, 2, 3); // => 6\nadd3(1, 2, 3, 4, 5); // => 18\n```\n\n### Real world example\n\n```javascript\nvar converter = fjs.curry(function(rate, symbol, input) {\n    var output = input * rate;\n    return symbol + output.toFixed(2);\n});\n\nvar poundsToUSD = converter(1.52, \"$\");\nvar poundsToEUR = converter(1.27, \"€\");\n\npoundsToUSD(100); // => \"€63.50\"\npoundsToEUR(50); // => \"$152.00\"\n```\n\n## License\n\n[MIT License](http://ilee.mit-license.org)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/leecrossley/functional-js.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.6.16"
}
