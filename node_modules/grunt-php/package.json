{
  "_args": [
    [
      {
        "raw": "grunt-php@^1.5.0",
        "scope": null,
        "escapedName": "grunt-php",
        "name": "grunt-php",
        "rawSpec": "^1.5.0",
        "spec": ">=1.5.0 <2.0.0",
        "type": "range"
      },
      "/var/www/html"
    ]
  ],
  "_from": "grunt-php@>=1.5.0 <2.0.0",
  "_id": "grunt-php@1.5.1",
  "_inCache": true,
  "_location": "/grunt-php",
  "_nodeVersion": "0.12.5",
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.11.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-php@^1.5.0",
    "scope": null,
    "escapedName": "grunt-php",
    "name": "grunt-php",
    "rawSpec": "^1.5.0",
    "spec": ">=1.5.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-php/-/grunt-php-1.5.1.tgz",
  "_shasum": "d10ac466894d846167631b203e67d8c634480bc9",
  "_shrinkwrap": null,
  "_spec": "grunt-php@^1.5.0",
  "_where": "/var/www/html",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/grunt-php/issues"
  },
  "dependencies": {
    "bin-version-check": "^2.0.0",
    "get-port": "^1.0.0",
    "object-assign": "^2.0.0",
    "opn": "^1.0.0"
  },
  "description": "Start a PHP-server",
  "devDependencies": {
    "got": "^2.9.2",
    "grunt": "^0.4.5",
    "grunt-browser-sync": "^2.0.0",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-jshint": "^0.11.1",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-jscs": "^1.6.0",
    "grunt-simple-mocha": "^0.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d10ac466894d846167631b203e67d8c634480bc9",
    "tarball": "https://registry.npmjs.org/grunt-php/-/grunt-php-1.5.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "tasks"
  ],
  "gitHead": "506ddeb2a9e7c3d9a2b1dc968046d513425bf5ae",
  "homepage": "https://github.com/sindresorhus/grunt-php#readme",
  "keywords": [
    "gruntplugin",
    "php",
    "server",
    "webserver",
    "web-server",
    "http"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "kevva",
      "email": "kevinmartensson@gmail.com"
    }
  ],
  "name": "grunt-php",
  "optionalDependencies": {},
  "readme": "# grunt-php [![Build Status](https://travis-ci.org/sindresorhus/grunt-php.svg?branch=master)](https://travis-ci.org/sindresorhus/grunt-php)\n\n> Start a [PHP-server](http://php.net/manual/en/features.commandline.webserver.php)\n\nPretty much a drop-in replacement for [grunt-contrib-connect](https://github.com/gruntjs/grunt-contrib-connect). Useful for eg. developing PHP projects or running tests on it.\n\nUses the built-in server in PHP 5.4.0+.\n\n*Doesn't have a `middleware` option as grunt-contrib-connect does.*\n\n\n## Install\n\n```\n$ npm install --save-dev grunt-php\n```\n\n\n## Usage\n\n```js\nrequire('load-grunt-tasks')(grunt); // npm install --save-dev load-grunt-tasks\n\ngrunt.initConfig({\n\tphp: {\n\t\tdist: {\n\t\t\toptions: {\n\t\t\t\tport: 5000\n\t\t\t}\n\t\t}\n\t}\n});\n\ngrunt.registerTask('default', ['php']);\n```\n\n\n## Examples\n\n#### Start a persistent PHP-server and open in browser\n\n```js\ngrunt.initConfig({\n\tphp: {\n\t\ttest: {\n\t\t\toptions: {\n\t\t\t\tkeepalive: true,\n\t\t\t\topen: true\n\t\t\t}\n\t\t}\n\t}\n});\n\ngrunt.registerTask('test', ['php', 'mocha']);\n```\n\n#### Use it with [BrowserSync](http://www.browsersync.io)\n\n```js\ngrunt.initConfig({\n\tphp: {\n\t\tdist: {\n\t\t\toptions: {\n\t\t\t\thostname: '127.0.0.1',\n\t\t\t\tport: 9000,\n\t\t\t\tbase: 'dist', // Project root\n\t\t\t\tkeepalive: false,\n\t\t\t\topen: false\n\t\t\t}\n\t\t}\n\t},\n\tbrowserSync: {\n\t\tdist: {\n\t\t\tbsFiles: {\n\t\t\t\tsrc: [\n\t\t\t\t\t// Files you want to watch for changes\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tproxy: '<%= php.dist.options.hostname %>:<%= php.dist.options.port %>',\n\t\t\t\twatchTask: true,\n\t\t\t\tnotify: true,\n\t\t\t\topen: true,\n\t\t\t\tlogLevel: 'silent',\n\t\t\t\tghostMode: {\n\t\t\t\t\tclicks: true,\n\t\t\t\t\tscroll: true,\n\t\t\t\t\tlinks: true,\n\t\t\t\t\tforms: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\twatch: {\n\t\t// Your watch tasks\n\t}\n});\n\ngrunt.registerTask('serve', [\n\t'php:dist',         // Start PHP Server\n\t'browserSync:dist', // Using the php instance as a proxy\n\t'watch'             // Any other watch tasks you want to run\n]);\n```\n\n#### Use it with [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch)\n\n```js\ngrunt.initConfig({\n\tphp: {\n\t\twatch: {}\n\t}\n});\n\ngrunt.registerTask('phpwatch', ['php:watch', 'watch']);\n```\n\n#### Add path for a custom error log\n\n```js\ngrunt.initConfig({\n\tphp: {\n\t\tdist: {\n\t\t\toptions: {\n\t\t\t\tdirectives: {\n\t\t\t\t\t'error_log': require('path').resolve('logs/error.log')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\ngrunt.registerTask('default', ['php']);\n```\n\n## Options\n\n### port\n\nType: `number`  \nDefault: `8000`\n\nThe port on which you want to access the webserver. Task will fail if the port is already in use. Use the special value `?` to use a system-assigned port.\n\n### hostname\n\nType: `string`  \nDefault: `'127.0.0.1'` *(usually same as `localhost`)*\n\nThe hostname the webserver will use.\n\nUse `0.0.0.0` if you want it to be accessible from the outside.\n\n### base\n\nType: `string`  \nDefault: `'.'`\n\nFrom which folder the webserver will be served. Defaults to the directory of the Gruntfile.\n\n### keepalive\n\nType: `boolean`  \nDefault: `false`\n\nKeep the server alive indefinitely. Any task specified after this will not run.\n\nThis option can also be enabled ad-hoc by running the task like `grunt php:targetname:keepalive`\n\n### open\n\nType: `boolean` or `string`\nDefault: `false`\n\nOpen a browser when task is triggered.\n\nCan be one of the following:\n\n- `true`: opens the default server URL ('http://' + hostname + port)\n- a relative URL (string): opens that URL in the browser. Useful when testing pages that are not the default one.\n\n### router\n\nType: `string`  \n\nOptionally specify the path to a [router script](http://php.net/manual/en/features.commandline.webserver.php#example-380) that is run at the start of each HTTP request. If this script returns `false`, then the requested resource is returned as-is. Otherwise the script's output is returned to the browser.\n\nExample router script:\n\n```php\n<?php\n// router.php\nif (preg_match('/\\.(?:png|jpg|jpeg|gif)$/', $_SERVER[\"REQUEST_URI\"])) {\n\treturn false;    // serve the requested resource as-is\n} else {\n\techo \"<p>Thanks for using grunt-php :)</p>\";\n}\n?>\n```\n\n### bin\n\nType: `string`  \nDefault: `'php'`\n\nPath to the PHP binary. Useful if you have multiple versions of PHP installed.\n\n### ini\n\nType: `string`  \nDefault: Built-in `php.ini`\n\nPath to a custom [`php.ini`](http://php.net/manual/en/ini.php) config file.\n\n### silent\n\nType: `boolean`  \nDefault: `false`\n\nSuppress output produced by the PHP-server.\n\n### directives\n\nType: `object`  \nDefault: `{}`\n\nAdd custom [ini directives](http://php.net/manual/en/ini.list.php).\n\n### env\n\nType: `object`  \nDefault: `{}`\n\nSet environment variables for the PHP process.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/grunt-php.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "1.5.1"
}
